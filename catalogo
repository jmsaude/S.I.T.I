using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using MySql.Data.MySqlClient;


namespace MySqlCRUD
{
    public partial class Form1 : Form
    {   // Conexão com o bando de dados.
        string connectionString = @"Server=localhost;Database=bookdb;Uid=root;Pwd=crud123456;";

        int BookID = 0;

        public Form1()
        {
            InitializeComponent();
        }
        // Função do botão de salvar.
        private void btnSave_Click(object sender, EventArgs e)
        {
            using (MySqlConnection mysqlCon = new MySqlConnection(connectionString))
            {
                mysqlCon.Open();
                MySqlCommand mySqlCmd = new MySqlCommand("BookAddOrEdit",mysqlCon);
                mySqlCmd.CommandType = CommandType.StoredProcedure;
                mySqlCmd.Parameters.AddWithValue("_BookID", BookID);
                mySqlCmd.Parameters.AddWithValue("_BookName", txtBookName.Text.Trim());
                mySqlCmd.Parameters.AddWithValue("_Author", txtAuthor.Text.Trim());
                mySqlCmd.Parameters.AddWithValue("_Description", txtDescription.Text.Trim());
                mySqlCmd.ExecuteNonQuery();
                // Mensagem confirmando que foi salvo.
                MessageBox.Show("Submitted Successfully");

                Clear();
                GridFill();
            }
        }

        // Preenchimento da tabela com nome do livro, autor, etc.
        void GridFill()
        {
            using (MySqlConnection mysqlCon = new MySqlConnection(connectionString))
            {
                mysqlCon.Open();
                MySqlDataAdapter sqlDA = new MySqlDataAdapter("BookViewAll", mysqlCon);
                sqlDA.SelectCommand.CommandType = CommandType.StoredProcedure;
                DataTable dtblBook = new DataTable();
                sqlDA.Fill(dtblBook);
                dgvBook.DataSource = dtblBook;
                // Mostrar ou não o ID do livro.
                dgvBook.Columns[0].Visible = false;
            }

        }

        private void Form1_Load(object sender, EventArgs e)
        {
            Clear();
            GridFill();
        }
        // Limpa os espaços do autor, nome do livro, etc, após salvar, atualizar ou deletar algo.
        void Clear()
        {
            txtBookName.Text = txtAuthor.Text = txtDescription.Text = txtSearch.Text = "";
            BookID = 0;
            btnSave.Text = "Save";
            // Desabilita o botão de "Deletar" se não houver nenhumaa coluna selecionada.
            btnDelete.Enabled = false;
        }
        // Função de duplo clique para selecionar uma coluna para visualizar, alterar ou excluir.
        private void dgvBook_DoubleClick(object sender, EventArgs e)
        {
            if(dgvBook.CurrentRow.Index != -1)
            {
                txtBookName.Text = dgvBook.CurrentRow.Cells[1].Value.ToString();
                txtAuthor.Text = dgvBook.CurrentRow.Cells[2].Value.ToString();
                txtDescription.Text = dgvBook.CurrentRow.Cells[3].Value.ToString();

                BookID = Convert.ToInt32(dgvBook.CurrentRow.Cells[0].Value.ToString());
                // Após selecionar alguma coluna, altera o botão "Salvar" para "Atualizar".
                btnSave.Text = "Update";
                // Ativa o botão "Deletar" quando há uma coluna selecionada.
                btnDelete.Enabled = Enabled;

            }
        }
        // Função de busca pelo nome do livro ou autor.
        private void btnSearch_Click(object sender, EventArgs e)
        {
            using (MySqlConnection mysqlCon = new MySqlConnection(connectionString))
            {
                mysqlCon.Open();
                MySqlDataAdapter sqlDA = new MySqlDataAdapter("BookSearchByValue", mysqlCon);
                sqlDA.SelectCommand.CommandType = CommandType.StoredProcedure;
                sqlDA.SelectCommand.Parameters.AddWithValue("_SearchValue", txtSearch.Text);
                DataTable dtblBook = new DataTable();
                sqlDA.Fill(dtblBook);
                dgvBook.DataSource = dtblBook;
                dgvBook.Columns[0].Visible = false;
            }
        }
        // Cancela a coluna selecionada.
        private void btnCancel_Click(object sender, EventArgs e)
        {
            Clear();
        }
        // Deleta uma coluna da tabela.
        private void btnDelete_Click(object sender, EventArgs e)
        {
            using (MySqlConnection mysqlCon = new MySqlConnection(connectionString))
            {
                mysqlCon.Open();
                MySqlCommand mySqlCmd = new MySqlCommand("BookDeleteByID", mysqlCon);
                mySqlCmd.CommandType = CommandType.StoredProcedure;
                mySqlCmd.Parameters.AddWithValue("_BookID", BookID);         
                mySqlCmd.ExecuteNonQuery();
                MessageBox.Show("Deleted Successfully");

                Clear();
                GridFill();
            }
        }
    }
}
